// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`evaluateFixtures() handles fixtures that are invalid json 1`] = `
Array [
  Object {
    "fixturePath": "packages/graphql-validate-fixtures/test/fixtures/fixture-invalid/fixtures/another-fixture.json",
    "scriptError": [SyntaxError: packages/graphql-validate-fixtures/test/fixtures/fixture-invalid/fixtures/another-fixture.json: Unexpected string in JSON at position 35],
    "validationErrors": Array [],
  },
  Object {
    "fixturePath": "packages/graphql-validate-fixtures/test/fixtures/fixture-invalid/fixtures/MyQuery/fixture.json",
    "operationName": "MyQuery",
    "operationPath": "packages/graphql-validate-fixtures/test/fixtures/fixture-invalid/queries/Query.graphql",
    "operationType": "query",
    "validationErrors": Array [],
  },
]
`;

exports[`evaluateFixtures() handles fixtures with errors 1`] = `
Array [
  Object {
    "fixturePath": "packages/graphql-validate-fixtures/test/fixtures/fixture-errors/fixtures/another-fixture.json",
    "operationName": "AnotherQuery",
    "operationPath": "packages/graphql-validate-fixtures/test/fixtures/fixture-errors/queries/Another.graphql",
    "operationType": "query",
    "validationErrors": Array [
      Object {
        "keyPath": "name",
        "message": "should be a string but was a number",
      },
      Object {
        "keyPath": "age",
        "message": "should be non-null but was undefined",
      },
    ],
  },
  Object {
    "fixturePath": "packages/graphql-validate-fixtures/test/fixtures/fixture-errors/fixtures/MyQuery/fixture.json",
    "operationName": "MyQuery",
    "operationPath": "packages/graphql-validate-fixtures/test/fixtures/fixture-errors/queries/Query.graphql",
    "operationType": "query",
    "validationErrors": Array [],
  },
]
`;

exports[`evaluateFixtures() handles fixtures without errors 1`] = `
Array [
  Object {
    "fixturePath": "packages/graphql-validate-fixtures/test/fixtures/all-clear/fixtures/another-another-fixture.json",
    "operationName": "Another",
    "operationPath": "packages/graphql-validate-fixtures/test/fixtures/all-clear/queries/Another.graphql",
    "operationType": "query",
    "validationErrors": Array [],
  },
  Object {
    "fixturePath": "packages/graphql-validate-fixtures/test/fixtures/all-clear/fixtures/another-fixture.json",
    "operationName": "AnotherQuery",
    "operationPath": "packages/graphql-validate-fixtures/test/fixtures/all-clear/queries/Another.graphql",
    "operationType": "query",
    "validationErrors": Array [],
  },
  Object {
    "fixturePath": "packages/graphql-validate-fixtures/test/fixtures/all-clear/fixtures/MyQuery/fixture.json",
    "operationName": "MyQuery",
    "operationPath": "packages/graphql-validate-fixtures/test/fixtures/all-clear/queries/Query.graphql",
    "operationType": "query",
    "validationErrors": Array [],
  },
]
`;

exports[`evaluateFixtures() schemaOnly does not fail on malformed GraphQL documents 1`] = `
Array [
  Object {
    "fixturePath": "packages/graphql-validate-fixtures/test/fixtures/malformed-query/fixtures/another-fixture.json",
    "validationErrors": Array [],
  },
  Object {
    "fixturePath": "packages/graphql-validate-fixtures/test/fixtures/malformed-query/fixtures/MyQuery/fixture.json",
    "validationErrors": Array [],
  },
]
`;

exports[`evaluateFixtures() schemaOnly validates against the schema only 1`] = `
Array [
  Object {
    "fixturePath": "packages/graphql-validate-fixtures/test/fixtures/fixture-errors/fixtures/another-fixture.json",
    "validationErrors": Array [
      Object {
        "keyPath": "name",
        "message": "should be a string but was a number",
      },
    ],
  },
  Object {
    "fixturePath": "packages/graphql-validate-fixtures/test/fixtures/fixture-errors/fixtures/MyQuery/fixture.json",
    "validationErrors": Array [],
  },
]
`;

exports[`evaluateFixtures() throws an error when the schema is not found 1`] = `
[Error: Error parsing 'packages/graphql-validate-fixtures/test/fixtures/missing-schema/schema.json':

ENOENT: no such file or directory, open 'packages/graphql-validate-fixtures/test/fixtures/missing-schema/schema.json']
`;

exports[`evaluateFixtures() throws an error when there are malformed GraphQL documents 1`] = `
[Error: Error parsing 'packages/graphql-validate-fixtures/test/fixtures/malformed-query/queries/Another.graphql':

Syntax Error: Expected {, found Name "name"]
`;
